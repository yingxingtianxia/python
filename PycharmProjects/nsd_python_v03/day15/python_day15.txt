下课时间7：23～7：33

正则表达式
******匹配任意一个字符
元字符 "."
e.g.:
re.findall("f.o","faoabof!o")

******匹配组内的一个字符
元字符："[x-y]"
re.findall("[ased12]","1sadaSA")
re.findall("[a-z]","asdqweqzxc")

******匹配非组内字符
元字符：[^x-y]
re.findall("[^asd123]","asd1wq2")

******匹配数字
元字符："\d"
re.findall("\d","0123456798")
等同于[0-9]

******匹配数字、字母
元字符:"\w"
re.findall("\w","012asd!@#$")
等同于[0-9a-zA-Z]

******匹配空白字符
元字符："\s"
re.findall("\s","hello world")


练习8：01～8：04

匹配一组字符串

******或连接多个正则表达式
元字符|
re.findall("abc|def","abcdefgh")

******匹配0次或多次正则表达式
元字符*
re.findall("a.*","asdfgh")

******匹配1次或多次
元字符+

******匹配0次或1次
元字符？

******指定正则表达式的匹配次数
元字符{n,m}最少n次最多m次


练习8：23～8：26

match()
search()

******匹配字符串开头
元字符:"^"
^from  以from开头的字符串

******匹配字符串结尾
元字符:"$"
py$  以py结尾的字符串

******匹配单词的边界
元字符："\b"
\bfood\b


raw原始字符串
r"abc\ndef"

转义字符
\n 换行
\t 制表符
\\ \
\. .
.....

在原始字符串中\不做转义
****************
贪婪模式：尽可能多的向后匹配内容（默认）
非贪婪模式：尽可能少的匹配

分组（）


***********************************
课后练习：
1.匹配身份证号
2.匹配密码（长度8～10，以字母开头，后可以跟数字字母或"_"）
3.匹配浮点数
































































